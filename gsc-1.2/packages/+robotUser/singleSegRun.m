 function [ rtn ] = singleSegRun( inImg, inLabels )
% Performs a singe gscSeq segmentation. 
% I think gscSeg = Geodesic Start Convexity Sequential Segementation
% inLables are labels with -1 bg, 1 fg, 0 unknown.  These are generated by
% the software (which version?).
% inImg is the loaded RGB image.


inLabels=robotUser.mask2RWBMask( inLabels );
 

inGT = inLabels;
inGT = 1; % Not used in the first pass, which is all we do


opts.brushStyle='dotMiddle'; % Not used in the first pass, which is all we do
opts.numStrokes=1;% Define that we are only doing the first pass.
opts.brushRad=8; % Not used in the first pass, which is all we do

segOpts=gscSeq.segOpts();
fprintf('HELLO');

segH=gscSeq.segEngine(0,segOpts); % Debug level is the first arg.

[annoSeq,segSeq]=robotUser.run(segH,opts,im2double(inImg),inGT,inLabels);
delete(segH);

% --- Show the segmentation and brush sequence ---
figure;
for i=1:opts.numStrokes
  subplot(1,opts.numStrokes,i);
  imshow(segSeq(:,:,i));
  title(sprintf('Segmentation after\nstroke %d',i-1));
end

subplot(2,2,1), imshow(inImg); title('Image');
subplot(2,2,2), imshow(inLabels,[]); title('Seeds');

subplot(2,2,3), imshow(inImg);
hold on;
contour(segSeq(:,:,1),[0 0],'g','linewidth',4);
contour(segSeq(:,:,1),'k','linewidth',2);
hold off;
title('Output');

subplot(2,2,4), imshow(segSeq(:,:,1));
title('Binary Output');

rtn = segSeq(:,:,1);
